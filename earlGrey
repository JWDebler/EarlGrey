#!/bin/bash

usage()
{
    echo "    #############################
    earlGrey
    Required Parameters:
        -g == genome.fasta
        -s == species name
        -o == output directory
        -r == RepeatMasker search term (e.g arthropoda/eukarya)
        -t == Number of Threads (DO NOT specify more than are available)

    Optional Parameters:
        -l == Repbase species subset library (FASTA format)
        -i == Number of Iterations to BLAST, Extract, Extend - Only enter a number between 5 and 10 (Iteration outputs are 0-based!) (Default: 5)
        -f == Number flanking basepairs to extract (Default: 1000)
        -d == Maximum non-TE distance between annotations to consider a pair to be from the same cluster (100 is recommended)
        -b == Which elements to remove (L/S/B for LINEs/SINEs/Both - Choose ONLY ONE)

    Example Usage:

    earlGrey -g bombyxMori.fasta -s bombyxMori -o /home/toby/bombyxMori/repeatAnnotation/ -r arthropoda -t 16


    Prerequisites - These must be configured prior to using Earl Grey:
        - RepeatMasker (Version 4.1.2)                                                                                                                                                                                                               - RepeatModeler (version 2.0.2)                                                                                                                                                                                                                                                                                                                                                                                                                                                       Ensure you have run the ./configure script from the earlGrey installation directory
    Ensure RepeatMasker has been configured with the desired repeat libraries (RepBase and Dfam 3.2 are recommended)

    Queries can be sent to:
    tb529@exeter.ac.uk

    Please make use of the GitHub Issues and Discussion Tabs at: https://github.com/TobyBaril/EarlGrey
    #############################"
}
    
# Subprocess Make Directories #
makeDirectory()
{
    directory=$(realpath ${directory})
    mkdir ${directory}/${species}EarlGrey/
    OUTDIR=${directory}/${species}EarlGrey
    mkdir $OUTDIR/${species}_RepeatMasker/
    mkdir $OUTDIR/${species}_Database/
    mkdir $OUTDIR/${species}_RepeatModeler/
    mkdir $OUTDIR/${species}_BLASTN/
    mkdir $OUTDIR/${species}_ExtractAlign/
    mkdir $OUTDIR/${species}_Curated_Library/
    mkdir $OUTDIR/${species}_Masked_de_novo_Repeats/
    mkdir $OUTDIR/${species}_Library_Filtering/
    mkdir $OUTDIR/${species}_RepeatMasker_Against_Custom_Library/
    mkdir $OUTDIR/${species}_RepeatLandscape/
    mkdir $OUTDIR/${species}_mergedRepeats/
    mkdir ${OUTDIR}/${species}_summaryFiles/
    mkdir $OUTDIR/${species}_clusTErs/
}
    
# Subprocess PrepGenome #
prepGenome()
{
    genome=$(realpath ${genome})
    cp ${genome} ${genome}.bak && gzip ${genome}.bak
    sed -i '/>/ s/ .*//g' ${genome}
    ${SCRIPT_DIR}/headSwap.sh -i ${genome} -o ${genome}.prep
    sed -i '/^>/! s/D/N/g;/^>/! s/V/N/g;/^>/! s/H/N/g;/^>/! s/B/N/g;/^>/! s/P/N/g;/^>/! s/E/N/g' ${genome}.prep
    dict=${genome}.dict
    genome=${genome}.prep
}

# Subprocess getRepeatMaskerFasta
getRepeatMaskerFasta()
{
    famdb.py -i $(which RepeatMasker | sed 's|/[^/]*$||g')/Libraries/RepeatMaskerLib.h5 families -f fasta_name --include-class-in-name -a -d arthropoda > ${OUTDIR}/${RepSpec}.RepeatMasker.lib
    RepSub=${OUTDIR}/${RepSpec}.RepeatMasker.lib
}

# Subprocess firstMask
firstMask()
{
    cd ${OUTDIR}/${species}_RepeatMasker
    RepeatMasker -species $RepSpec -nolow -norna -lcambig -s -a -pa $ProcNum -dir $OUTDIR/${species}_RepeatMasker $genome
}

# Subprocess firstCustom
firstCustom()
{
    cd ${OUTDIR}/${species}_RepeatMasker
    RepeatMasker -lib $RepSub -nolow -norna -lcambig -s -a -pa $ProcNum -dir $OUTDIR/${species}_RepeatMasker $genome
}

# Subprocess buildDB
buildDB()
{
    cd ${OUTDIR}/${species}_Database
    BuildDatabase -name ${species} -engine ncbi ${OUTDIR}/${species}_RepeatMasker/*.masked
}

# Subprocess deNovo1
deNovo1()
{
    cd ${OUTDIR}/${species}_RepeatModeler
    RepeatModeler -engine ncbi -pa ${ProcNum} -database ${OUTDIR}/${species}_Database/${species}
    if [ ! -e ${OUTDIR}/${species}_Database/${species}-families.fa ]; then
        echo "ERROR: RepeatModeler Failed"
        exit 2
    fi
}

# Subprocess moveFiles
moveFiles()
{
    mv ${OUTDIR}/${species}_Database/${species}-families.fa ${OUTDIR}/${species}_RepeatModeler/${species}-families.fa
    mv ${OUTDIR}/${species}_Database/${species}-families.stk ${OUTDIR}/${species}_RepeatModeler/${species}-families.stk
}

# Subprocess BEE1
BEE1()
{
    cd ${OUTDIR}/${species}_BLASTN/
    blastn -query ${OUTDIR}/${species}_RepeatModeler/${species}-families.fa -subject ${genome} -out ${OUTDIR}/${species}_BLASTN/${species}_BLAST -evalue 1e-50 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
}
 
# Subprocess Format1
Format1()
{
    cd ${OUTDIR}/${species}_RepeatModeler/
    cp ${species}-families.fa ${species}-families.fa.no_slash
    sed -i 's#/#___#g; s/#/__/g' ${species}-families.fa.no_slash

    cd ${OUTDIR}/${species}_BLASTN/
    cp ${species}_BLAST ${species}_BLAST.no_slash
    sed -i 's#/#___#g; s/#/__/g' ${species}_BLAST.no_slash
}

# Subprocess BEE2
BEE2()
{
    cd ${OUTDIR}/${species}_ExtractAlign
    ${SCRIPT_DIR}/extract_align.py -g ${genome} -b ${OUTDIR}/${species}_BLASTN/${species}_BLAST.no_slash -l ${OUTDIR}/${species}_RepeatModeler/${species}-families.fa.no_slash -lb $Flank -rb $Flank -n 20 -a n -t n -e n
    mkdir ${OUTDIR}/${species}_ExtractAlign/mafft/ 
    parallel "mafft --auto {} > ${OUTDIR}/${species}_ExtractAlign/mafft/{/.}.mafft" ::: ${OUTDIR}/${species}_ExtractAlign/catTEfiles/*.fa 
    mkdir ${OUTDIR}/${species}_ExtractAlign/trimal/ && cd ${OUTDIR}/${species}_ExtractAlign/trimal/
    parallel trimal -in {} -gt 0.6 -fasta -out ${OUTDIR}/${species}_ExtractAlign/trimal/{/.}.trimal.fa ::: ${OUTDIR}/${species}_ExtractAlign/mafft/*.mafft
    mkdir ${OUTDIR}/${species}_ExtractAlign/embossCons/ && cd ${OUTDIR}/${species}_ExtractAlign/embossCons/
    parallel cons -sequence {} -outseq ${OUTDIR}/${species}_ExtractAlign/embossCons/{/.}_cons.fa -name {/.}  -plurality 3 -identity $(expr $(grep '>' {} | wc -l) / 3) ::: ${OUTDIR}/${species}_ExtractAlign/trimal/*.trimal.fa
}

# Subprocess BEE3
BEE3()
{
    parallel "sed -i '/^>/ s/.trimal.*//g' {}" ::: ${OUTDIR}/${species}_ExtractAlign/embossCons/*_cons.fa
    cat ${OUTDIR}/${species}_ExtractAlign/embossCons/*_cons.fa > ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter0.fasta
}

# Subprocess Iterations
Iterations()
{
    stage="Running BLAST, Extract, Extend Iteration 1"
    runningCow
    blastn -query ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter0.fasta -subject ${genome} -out ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter1 -evalue 1e-50 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
    cd ${OUTDIR}/${species}_ExtractAlign
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter1
    cd ${OUTDIR}/${species}_ExtractAlign/iter1
    ${SCRIPT_DIR}/extract_align.py -g ${genome} -b ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter1 -l ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter0.fasta -lb $Flank -rb $Flank -n 20 -a n -t n -e n
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter1/mafft/
    parallel "mafft --auto {} > ${OUTDIR}/${species}_ExtractAlign/iter1/mafft/{/.}.mafft" ::: ${OUTDIR}/${species}_ExtractAlign/iter1/catTEfiles/*.fa 
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter1/trimal/
    parallel trimal -in {} -gt 0.6 -fasta -out ${OUTDIR}/${species}_ExtractAlign/iter1/trimal/{/.}.trimal.fa ::: ${OUTDIR}/${species}_ExtractAlign/iter1/mafft/*.mafft
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter1/embossCons/
    parallel cons -sequence {} -outseq ${OUTDIR}/${species}_ExtractAlign/iter1/embossCons/{/.}_cons.fa -name {/.}  -plurality 3 -identity $(expr $(grep '>' {} | wc -l) / 3) ::: ${OUTDIR}/${species}_ExtractAlign/iter1/trimal/*.trimal.fa
    parallel "sed -i '/^>/ s/.trimal.*//g' {}" ::: ${OUTDIR}/${species}_ExtractAlign/iter1/embossCons/*_cons.fa
    cat ${OUTDIR}/${species}_ExtractAlign/iter1/embossCons/*_cons.fa > ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter1.fasta
    
    stage="Running BLAST, Extract, Extend Iteration 2"
    runningCow
    blastn -query ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter1.fasta -subject ${genome} -out ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter2 -evalue 1e-50 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
    cd ${OUTDIR}/${species}_ExtractAlign
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter2
    cd ${OUTDIR}/${species}_ExtractAlign/iter2
    ${SCRIPT_DIR}/extract_align.py -g ${genome} -b ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter2 -l ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter1.fasta -lb $Flank -rb $Flank -n 20 -a n -t n -e n
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter2/mafft/
    parallel "mafft --auto {} > ${OUTDIR}/${species}_ExtractAlign/iter2/mafft/{/.}.mafft" ::: ${OUTDIR}/${species}_ExtractAlign/iter2/catTEfiles/*.fa 
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter2/trimal/
    parallel trimal -in {} -gt 0.6 -fasta -out ${OUTDIR}/${species}_ExtractAlign/iter2/trimal/{/.}.trimal.fa ::: ${OUTDIR}/${species}_ExtractAlign/iter2/mafft/*.mafft
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter2/embossCons/
    parallel cons -sequence {} -outseq ${OUTDIR}/${species}_ExtractAlign/iter2/embossCons/{/.}_cons.fa -name {/.}  -plurality 3 -identity $(expr $(grep '>' {} | wc -l) / 3) ::: ${OUTDIR}/${species}_ExtractAlign/iter2/trimal/*.trimal.fa
    parallel "sed -i '/^>/ s/.trimal.*//g' {}" ::: ${OUTDIR}/${species}_ExtractAlign/iter2/embossCons/*_cons.fa
    cat ${OUTDIR}/${species}_ExtractAlign/iter2/embossCons/*_cons.fa > ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter2.fasta
    
    stage="Running BLAST, Extract, Extend Iteration 3"
    runningCow
    blastn -query ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter2.fasta -subject ${genome} -out ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter3 -evalue 1e-50 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
    cd ${OUTDIR}/${species}_ExtractAlign
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter3
    cd ${OUTDIR}/${species}_ExtractAlign/iter3
    ${SCRIPT_DIR}/extract_align.py -g ${genome} -b ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter3 -l ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter2.fasta -lb $Flank -rb $Flank -n 20 -a n -t n -e n
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter3/mafft/
    parallel "mafft --auto {} > ${OUTDIR}/${species}_ExtractAlign/iter3/mafft/{/.}.mafft" ::: ${OUTDIR}/${species}_ExtractAlign/iter3/catTEfiles/*.fa 
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter3/trimal/
    parallel trimal -in {} -gt 0.6 -fasta -out ${OUTDIR}/${species}_ExtractAlign/iter3/trimal/{/.}.trimal.fa ::: ${OUTDIR}/${species}_ExtractAlign/iter3/mafft/*.mafft
    mkdir ${OUTDIR}/${species}_ExtractAlign/iter3/embossCons/
    parallel cons -sequence {} -outseq ${OUTDIR}/${species}_ExtractAlign/iter3/embossCons/{/.}_cons.fa -name {/.}  -plurality 3 -identity $(expr $(grep '>' {} | wc -l) / 3) ::: ${OUTDIR}/${species}_ExtractAlign/iter3/trimal/*.trimal.fa
    parallel "sed -i '/^>/ s/.trimal.*//g' {}" ::: ${OUTDIR}/${species}_ExtractAlign/iter3/embossCons/*_cons.fa
    cat ${OUTDIR}/${species}_ExtractAlign/iter3/embossCons/*_cons.fa > ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter3.fasta
    latestFile=${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter3.fasta
    
    if [ $num -gt 4 ]
        then
            stage="Running BLAST, Extract, Extend Iteration 4"
            runningCow
            blastn -query ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter3.fasta -subject ${genome} -out ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter4 -evalue 1e-50 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
            cd ${OUTDIR}/${species}_ExtractAlign
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter4
            cd ${OUTDIR}/${species}_ExtractAlign/iter4
            ${SCRIPT_DIR}/extract_align.py -g ${genome} -b ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter4 -l ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter3.fasta -lb $Flank -rb $Flank -n 20 -a n -t n -e n
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter4/mafft/
            parallel "mafft --auto {} > ${OUTDIR}/${species}_ExtractAlign/iter4/mafft/{/.}.mafft" ::: ${OUTDIR}/${species}_ExtractAlign/iter4/catTEfiles/*.fa 
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter4/trimal/
            parallel trimal -in {} -gt 0.6 -fasta -out ${OUTDIR}/${species}_ExtractAlign/iter4/trimal/{/.}.trimal.fa ::: ${OUTDIR}/${species}_ExtractAlign/iter4/mafft/*.mafft
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter4/embossCons/
            parallel cons -sequence {} -outseq ${OUTDIR}/${species}_ExtractAlign/iter4/embossCons/{/.}_cons.fa -name {/.}  -plurality 3 -identity $(expr $(grep '>' {} | wc -l) / 3) ::: ${OUTDIR}/${species}_ExtractAlign/iter4/trimal/*.trimal.fa
            parallel "sed -i '/^>/ s/.trimal.*//g' {}" ::: ${OUTDIR}/${species}_ExtractAlign/iter4/embossCons/*_cons.fa
            cat ${OUTDIR}/${species}_ExtractAlign/iter4/embossCons/*_cons.fa > ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter4.fasta
            latestFile=${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter4.fasta
        else
            echo "$num iterations complete"
    fi
    
    if [ $num -gt 5 ]
        then
            stage="Running BLAST, Extract, Extend Iteration 5"
            runningCow
            blastn -query ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter4.fasta -subject ${genome} -out ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter5 -evalue 1e-50 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
            cd ${OUTDIR}/${species}_ExtractAlign
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter5
            cd ${OUTDIR}/${species}_ExtractAlign/iter5
            ${SCRIPT_DIR}/extract_align.py -g ${genome} -b ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter5 -l ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter4.fasta -lb $Flank -rb $Flank -n 20 -a n -t n -e n
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter5/mafft/
            parallel "mafft --auto {} > ${OUTDIR}/${species}_ExtractAlign/iter5/mafft/{/.}.mafft" ::: ${OUTDIR}/${species}_ExtractAlign/iter5/catTEfiles/*.fa 
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter5/trimal/
            parallel trimal -in {} -gt 0.6 -fasta -out ${OUTDIR}/${species}_ExtractAlign/iter5/trimal/{/.}.trimal.fa ::: ${OUTDIR}/${species}_ExtractAlign/iter5/mafft/*.mafft
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter5/embossCons/
            parallel cons -sequence {} -outseq ${OUTDIR}/${species}_ExtractAlign/iter5/embossCons/{/.}_cons.fa -name {/.}  -plurality 3 -identity $(expr $(grep '>' {} | wc -l) / 3) ::: ${OUTDIR}/${species}_ExtractAlign/iter5/trimal/*.trimal.fa
            parallel "sed -i '/^>/ s/.trimal.*//g' {}" ::: ${OUTDIR}/${species}_ExtractAlign/iter5/embossCons/*_cons.fa
            cat ${OUTDIR}/${species}_ExtractAlign/iter5/embossCons/*_cons.fa > ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter5.fasta
            latestFile=${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter5.fasta
        else
            echo "$num iterations complete"
    fi
    
    if [ $num -gt 6 ]
        then
            stage="Running BLAST, Extract, Extend Iteration 6"
            runningCow
            blastn -query ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter5.fasta -subject ${genome} -out ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter6 -evalue 1e-50 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
            cd ${OUTDIR}/${species}_ExtractAlign
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter6
            cd ${OUTDIR}/${species}_ExtractAlign/iter6
            ${SCRIPT_DIR}/extract_align.py -g ${genome} -b ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter6 -l ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter5.fasta -lb $Flank -rb $Flank -n 20 -a n -t n -e n
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter6/mafft/
            parallel "mafft --auto {} > ${OUTDIR}/${species}_ExtractAlign/iter6/mafft/{/.}.mafft" ::: ${OUTDIR}/${species}_ExtractAlign/iter6/catTEfiles/*.fa 
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter6/trimal/
            parallel trimal -in {} -gt 0.6 -fasta -out ${OUTDIR}/${species}_ExtractAlign/iter6/trimal/{/.}.trimal.fa ::: ${OUTDIR}/${species}_ExtractAlign/iter6/mafft/*.mafft
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter6/embossCons/
            parallel cons -sequence {} -outseq ${OUTDIR}/${species}_ExtractAlign/iter6/embossCons/{/.}_cons.fa -name {/.}  -plurality 3 -identity $(expr $(grep '>' {} | wc -l) / 3) ::: ${OUTDIR}/${species}_ExtractAlign/iter6/trimal/*.trimal.fa
            parallel "sed -i '/^>/ s/.trimal.*//g' {}" ::: ${OUTDIR}/${species}_ExtractAlign/iter6/embossCons/*_cons.fa
            cat ${OUTDIR}/${species}_ExtractAlign/iter6/embossCons/*_cons.fa > ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter6.fasta
            latestFile=${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter6.fasta
        else
            echo "$num iterations complete"
    fi
    
    
    if [ $num -gt 7 ]
        then
            stage="Running BLAST, Extract, Extend Iteration 7"
            runningCow
            blastn -query ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter6.fasta -subject ${genome} -out ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter7 -evalue 1e-50 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
            cd ${OUTDIR}/${species}_ExtractAlign
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter7
            cd ${OUTDIR}/${species}_ExtractAlign/iter7
            ${SCRIPT_DIR}/extract_align.py -g ${genome} -b ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter7 -l ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter6.fasta -lb $Flank -rb $Flank -n 20 -a n -t n -e n
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter7/mafft/
            parallel "mafft --auto {} > ${OUTDIR}/${species}_ExtractAlign/iter7/mafft/{/.}.mafft" ::: ${OUTDIR}/${species}_ExtractAlign/iter7/catTEfiles/*.fa 
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter7/trimal/
            parallel trimal -in {} -gt 0.6 -fasta -out ${OUTDIR}/${species}_ExtractAlign/iter7/trimal/{/.}.trimal.fa ::: ${OUTDIR}/${species}_ExtractAlign/iter7/mafft/*.mafft
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter7/embossCons/
            parallel cons -sequence {} -outseq ${OUTDIR}/${species}_ExtractAlign/iter7/embossCons/{/.}_cons.fa -name {/.}  -plurality 3 -identity $(expr $(grep '>' {} | wc -l) / 3) ::: ${OUTDIR}/${species}_ExtractAlign/iter7/trimal/*.trimal.fa
            parallel "sed -i '/^>/ s/.trimal.*//g' {}" ::: ${OUTDIR}/${species}_ExtractAlign/iter7/embossCons/*_cons.fa
            cat ${OUTDIR}/${species}_ExtractAlign/iter7/embossCons/*_cons.fa > ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter7.fasta
            latestFile=${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter7.fasta
        else
            echo "$num iterations complete"
    fi
    
    if [ $num -gt 8 ]
        then
            stage="Running BLAST, Extract, Extend Iteration 8"
            runningCow
            blastn -query ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter7.fasta -subject ${genome} -out ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter8 -evalue 1e-50 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
            cd ${OUTDIR}/${species}_ExtractAlign
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter8
            cd ${OUTDIR}/${species}_ExtractAlign/iter8
            ${SCRIPT_DIR}/extract_align.py -g ${genome} -b ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter8 -l ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter7.fasta -lb $Flank -rb $Flank -n 20 -a n -t n -e n
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter8/mafft/
            parallel "mafft --auto {} > ${OUTDIR}/${species}_ExtractAlign/iter8/mafft/{/.}.mafft" ::: ${OUTDIR}/${species}_ExtractAlign/iter8/catTEfiles/*.fa 
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter8/trimal/
            parallel trimal -in {} -gt 0.6 -fasta -out ${OUTDIR}/${species}_ExtractAlign/iter8/trimal/{/.}.trimal.fa ::: ${OUTDIR}/${species}_ExtractAlign/iter8/mafft/*.mafft
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter8/embossCons/
            parallel cons -sequence {} -outseq ${OUTDIR}/${species}_ExtractAlign/iter8/embossCons/{/.}_cons.fa -name {/.}  -plurality 3 -identity $(expr $(grep '>' {} | wc -l) / 3) ::: ${OUTDIR}/${species}_ExtractAlign/iter8/trimal/*.trimal.fa
            parallel "sed -i '/^>/ s/.trimal.*//g' {}" ::: ${OUTDIR}/${species}_ExtractAlign/iter8/embossCons/*_cons.fa
            cat ${OUTDIR}/${species}_ExtractAlign/iter8/embossCons/*_cons.fa > ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter8.fasta
            latestFile=${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter8.fasta
        else
            echo "$num iterations complete"
    fi
    
    if [ $num -gt 9 ]
        then
            stage="Running BLAST, Extract, Extend Iteration 9"
            runningCow
            blastn -query ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter8.fasta -subject ${genome} -out ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter9 -evalue 1e-50 -outfmt "6 qseqid sseqid pident length mismatch gapopen qstart qend sstart send evalue bitscore"
            cd ${OUTDIR}/${species}_ExtractAlign
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter9
            cd ${OUTDIR}/${species}_ExtractAlign/iter9
            ${SCRIPT_DIR}/extract_align.py -g ${genome} -b ${OUTDIR}/${species}_BLASTN/${species}_BLAST_iter9 -l ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter8.fasta -lb $Flank -rb $Flank -n 20 -a n -t n -e n
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter9/mafft/
            parallel "mafft --auto {} > ${OUTDIR}/${species}_ExtractAlign/iter9/mafft/{/.}.mafft" ::: ${OUTDIR}/${species}_ExtractAlign/iter9/catTEfiles/*.fa 
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter9/trimal/
            parallel trimal -in {} -gt 0.6 -fasta -out ${OUTDIR}/${species}_ExtractAlign/iter9/trimal/{/.}.trimal.fa ::: ${OUTDIR}/${species}_ExtractAlign/iter9/mafft/*.mafft
            mkdir ${OUTDIR}/${species}_ExtractAlign/iter9/embossCons/
            parallel cons -sequence {} -outseq ${OUTDIR}/${species}_ExtractAlign/iter9/embossCons/{/.}_cons.fa -name {/.}  -plurality 3 -identity $(expr $(grep '>' {} | wc -l) / 3) ::: ${OUTDIR}/${species}_ExtractAlign/iter9/trimal/*.trimal.fa
            parallel "sed -i '/^>/ s/.trimal.*//g' {}" ::: ${OUTDIR}/${species}_ExtractAlign/iter9/embossCons/*_cons.fa
            cat ${OUTDIR}/${species}_ExtractAlign/iter9/embossCons/*_cons.fa > ${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter9.fasta
            latestFile=${OUTDIR}/${species}_Curated_Library/${species}_de_novo_repeat_library_iter9.fasta
        else
            echo "$num iterations complete"
    fi
    
    
}

# Subprocess BClass
BClass()
{
    cd ${OUTDIR}/${species}_Masked_de_novo_Repeats
    RepeatMasker -species $RepSpec -nolow -norna -lcambig -s -pa $ProcNum -dir ${OUTDIR}/${species}_Masked_de_novo_Repeats $latestFile
    awk '{OFS="\t"}{print $5, $5, $11}' ${OUTDIR}/${species}_Masked_de_novo_Repeats/${species}_de_novo_repeat_library_iter*.fasta.out | sort -u -k1,1 > TE_Class_Identities
    awk '{OFS="\t"}{gsub(/__.*/,"#",$2); print}' TE_Class_Identities | sed 's/#\t/#/g; s/^/sed -i "s|/g; s/\t/|/g; s/$/|g" /g' | sed "s|$|\"$latestFile\"|g" | grep "rnd" > TE_Class_Identities.script3
    chmod 777 ${OUTDIR}/${species}_Masked_de_novo_Repeats/TE_Class_Identities.script3
    ${OUTDIR}/${species}_Masked_de_novo_Repeats/TE_Class_Identities.script3
    rm ${OUTDIR}/${species}_Masked_de_novo_Repeats/TE_Class_Identities*
}

# Subprocess appLib
appLib()
{
    cd ${OUTDIR}/${species}_Curated_Library
    cp $RepSub RepBase_formatted.fasta
    sed -i 's#___#/#g; s/__/#/g' $latestFile
    cat ${OUTDIR}/${species}_Curated_Library/RepBase_formatted.fasta $latestFile > ${species}_combined_library.fasta
}


# Subprocess novoMask
novoMask()
{
    cd ${OUTDIR}/${species}_RepeatMasker_Against_Custom_Library/
    RepeatMasker -lib ${OUTDIR}/${species}_Curated_Library/${species}_combined_library.fasta -cutoff 400 -nolow -norna -lcambig -s -a -pa $ProcNum -dir ${OUTDIR}/${species}_RepeatMasker_Against_Custom_Library/ $genome
}

# Subprocess calcDivRL
calcDivRL()
{
    cd ${OUTDIR}/${species}_RepeatLandscape
    genome_size=$(sed -n '4p' ${OUTDIR}/${species}_RepeatMasker_Against_Custom_Library/*.tbl | rev | cut -f1,1 -d ':' | rev | sed 's/ bp.*//g; s/ //g')
    align_file=$(readlink -f ${OUTDIR}/${species}_RepeatMasker_Against_Custom_Library/*.align)
    ${SCRIPT_DIR}/calcDivergenceFromAlign.pl -s ${species}.divsum $align_file
    div_file=$(readlink -f $OUTDIR/${species}_RepeatLandscape/${species}.divsum)
}

# Subprocess rcMergeRepeats
mergeRep()
{
    cd ${OUTDIR}/${species}_mergedRepeats/
    ${SCRIPT_DIR}/rcMergeRepeats -f $genome -s $species -d ${OUTDIR}/${species}_mergedRepeats/ -u ${OUTDIR}/${species}_RepeatMasker_Against_Custom_Library/$(basename $genome).out -q ${OUTDIR}/${species}_RepeatMasker_Against_Custom_Library/$(basename $genome).tbl -c ~/Programs/repeatCraft/example/repeatcraft.cfg -t $ProcNum -b ${dict}
    mkdir ${OUTDIR}/${species}_mergedRepeats/looseMerge
    ${SCRIPT_DIR}/rcMergeRepeatsLoose -f $genome -s $species -d ${OUTDIR}/${species}_mergedRepeats/looseMerge -u ${OUTDIR}/${species}_RepeatMasker_Against_Custom_Library/$(basename $genome).out -q ${OUTDIR}/${species}_RepeatMasker_Against_Custom_Library/$(basename $genome).tbl -c ~/Programs/repeatCraft/example/repeatcraft.cfg -t $ProcNum -b ${dict}
}

# Subprocess pieChart
charts()
{
    cd ${OUTDIR}/${species}_summaryFiles/
    ${SCRIPT_DIR}/autoPie.sh -i ${OUTDIR}/${species}_mergedRepeats/looseMerge/${species}.filteredRepeats.bed -t ${OUTDIR}/${species}_RepeatMasker_Against_Custom_Library/$(basename $genome).tbl -p ${OUTDIR}/${species}_summaryFiles/${species}.summaryPie.pdf -o ${OUTDIR}/${species}_summaryFiles/${species}.highLevelCount.txt
    Rscript ${SCRIPT_DIR}/autoLand.R $div_file $genome_size $species ${OUTDIR}/${species}_summaryFiles/${species}.repeatLandscape.pdf
}

# Subprocess clusTErPluck
clusTErPluck()
{
    cd ${OUTDIR}/${species}_clusTErs/
    mergeBed -d ${dist} -i ${OUTDIR}/${species}_mergedRepeats/*.rmerge.gff | sed '1 i\Scaffold\tStart\tEnd' > ${OUTDIR}/${species}_clusTErs/${species}.clusTErs.bed
    clusterBed -d ${dist} -i ${OUTDIR}/${species}_mergedRepeats/*.rmerge.gff | sed '1 i\Scaffold\tSource\tRepeatFamily\tStart\tEnd\tScore\tStrand\tPhase\tAttributes\tClusterId' > ${OUTDIR}/${species}_clusTErs/${species}.detailedClusTErs.gff
}

# Subprocess sweepUp
sweepUp()
{
    cd ${OUTDIR}/${species}_summaryFiles/
    cp ${OUTDIR}/${species}_mergedRepeats/looseMerge/${species}.filteredRepeats.bed ${OUTDIR}/${species}_mergedRepeats/looseMerge/${species}.filteredRepeats.gff ${OUTDIR}/${species}_Curated_Library/${species}_combined_library.fasta $latestFile ${OUTDIR}/${species}_summaryFiles/
}

# Subprocess runningCow
runningCow()
{
    echo " ____________________
< $stage >
 --------------------
        \   ^__^
         \  (oo)\_______
            (__)\       )\/\
                
                ||----w |
                ||     ||"
}

# Subprocess GetTime
convertsecs() 
{
 h=$(bc <<< "${1}/3600")
 m=$(bc <<< "(${1}%3600)/60")
 s=$(bc <<< "${1}%60")
 printf "%02d:%02d:%05.2f\n" $h $m $s
}

# Subprocess Checks
Checks()
{
    if [ -z "$genome" ] || [ -z "$species" ] || [ -z "$directory" ] ; then
        usage; exit 1
    fi

    if [ -z "$ProcNum" ] ; then
        ProcNum=1; echo "$ProcNum Cores Will Be Used"
    fi

    if [[ -z "$RepSub" && -z "$RepSpec" ]]; then
	echo "Error: No RepeatMasker Species or Custom Repeat Library Specified"; exit 2
    fi

    if [ -z "$num"] || [ -a "$num" -lt 5 -a "$num" -gt 10 ]; then
        num=5; echo "De Novo Sequences Will Be Extended Through $num Iterations"
    fi
    
    if [ -z "$dist" ]; then
        dist=100; echo "Clusters Will Be Considered When TEs Are <${dist}bp Apart"
    fi

    if [ -z "$Flank"]; then
	Flank=1000; echo "Blast, Extract, Extend Process Will Add 1000bp to Each End in Each Iteration"
    fi

    if [ ! -d "$SCRIPT_DIR" ]; then
	echo "ERROR: Script directory variable not set, please run the configure script in the Earl Grey directory before attempting to run Earl Grey"; exit 1
    fi
}

# Main #

while getopts g:s:l:o:t:f:r:i:d:h option
do
    case "${option}" 
        in
        g) genome=${OPTARG};;
        s) species=${OPTARG};;
        l) RepSub=${OPTARG};;
        o) directory=${OPTARG};;
        r) RepSpec=${OPTARG};;
        t) ProcNum=${OPTARG};;
        f) Flank=${OPTARG};;
        i) num=${OPTARG};;
        d) dist=${OPTARG};;
        h) usage; exit 1;; 
    esac
done

SECONDS=0

# Step 1

stage="Checking Parameters"
runningCow
SCRIPT_DIR=INSERTFILEPATHHERE
Checks
stage="Making Directories"
runningCow
makeDirectory
stage="Cleaning Genome"
runningCow
prepGenome
sleep 1

# Step 2

if [ ! -f ${OUTDIR}/${species}_RepeatMasker/*.masked ]; then
	if [ -z "$RepSpec" ]
		then
			stage="Running Initial Mask with Custom Library" && runningCow
			firstCustom
	elif [ ! -z "$RepSpec" ] 
		then
			stage="Getting RepeatMasker Sequences for $RepSpec and Saving as Fasta" && runningCow
			getRepeatMaskerFasta
			stage="Running Initial Mask with RepBase" && runningCow
			firstMask
	fi 
	sleep 1
else 
	stage="Genome has already been masked, skipping..."
	runningCow
	sleep 5
fi 

# Step 3
if [ ! -f ${OUTDIR}/${species}_Database/${species}-families.fa ]; then
	stage="Detecting New Repeats"
	runningCow
	buildDB
	deNovo1
	moveFiles
	sleep 1
else
	stage="De novo repeats have already been detected, skipping..."
	moveFiles
	sleep 1
fi

# Step 4
stage="BLASTing, Extracting, Extending for $num Iterations"
runningCow
BEE1
Format1
BEE2
BEE3
Iterations
sleep 1

# Stage 5
stage="Building Species-Specific Library"
runningCow
BClass
appLib
sleep 1

# Stage 6
stage="Identifying Repeats Using Species-Specific Library"
runningCow
novoMask
calcDivRL
sleep 1

# Stage 7
stage="Running LTR_Finder and Defragmenting Repeats"
runningCow
mergeRep
sleep 1

# Stage 8
stage="Generating Summary Plots"
runningCow
charts
sleep 1

# Stage 11
stage="Identifying TE Clusters and Member Sequences"
runningCow
clusTErPluck
sleep 1

# Stage 12 
stage="Tidying Directories and Organising Important Files"
runningCow
sweepUp
sleep 1

# Stage 13
time=$(convertsecs $SECONDS)
stage="Done in $time"
runningCow
sleep 5

# Stage 14
stage="De Novo Library, Combined Library, Summary Figures, and TE Quantifications in Standard Formats Can Be Found in ${OUTDIR}/${species}_summaryFiles/"
runningCow
sleep 5
